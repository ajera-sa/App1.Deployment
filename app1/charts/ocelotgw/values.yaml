# Default values for api.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# avp: "app1/data/test/ocelotgw" #vault path in production and preprod
avp: "app1/data/ocelotgw/test" #vault path in test; TODO: All evnironments should be the same

# deploy this chart or not.

enabled: false

# specifiy the environment for ASPNET Core application so it can render the right appsettings
#environment: Test

replicaCount: 1

imagePullSecrets:
  - name: ocelot-registry-secret

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# https://helm.sh/docs/howto/charts_tips_and_tricks/#automatically-roll-deployments
podAnnotations: {}

podSecurityContext: { fsGroup: 2000 }
securityContext:
  allowPrivilegeEscalation: false
  runAsNonRoot: true
  runAsUser: 1000
  runAsGroup: 3000
  capabilities:
    drop:
      - ALL
  readOnlyRootFilesystem: false

service:
  type: ClusterIP
  port: 80
  annotations:
    # if you are using cloud provider such as azure and you need to get a private load balancer IP
    #service.beta.kubernetes.io/azure-load-balancer-internal: 'true'

ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    nginx.ingress.kubernetes.io/client-body-buffer-size: 100M
    nginx.ingress.kubernetes.io/proxy-buffer-size: 128k
    nginx.ingress.kubernetes.io/proxy-buffering: "on"
    nginx.ingress.kubernetes.io/proxy-buffers-number: "4"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "180"
    nginx.ingress.kubernetes.io/proxy-next-upstream-timeout: "180"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "180"
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    # This configuration to enable gzip module to compress the static files
    nginx.ingress.kubernetes.io/configuration-snippet: |
      gzip            on;
      gzip_min_length 1000;
      gzip_proxied    expired no-cache no-store private auth;
      gzip_types      application/javascript application/x-javascript text/javascript text/xml text/css;

  hosts:
    - host: <host>
      paths:
        - path: /
          pathType: ImplementationSpecific
  # tls:
  #   - secretName: publicportal-tls
  #     hosts:
  #       - mazad-web-test.thiqah.sa

deployment:
  probes:
    path: /
    port: http
    initDelay: <deployment.probes.initDelay>
    period: 10

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: <limits.cpu>
    memory: <limits.memory>
  requests:
    cpu: <requests.cpu>
    memory: <requests.memory>

autoscaling:
  enabled: false #<autoscaling.enabled>
  minReplicas: <autoscaling.minReplicas>
  maxReplicas: <autoscaling.maxReplicas>
  targetCPUUtilizationPercentage: <autoscaling.targetCPUUtilizationPercentage>
  targetMemoryUtilizationPercentage: <autoscaling.targetMemoryUtilizationPercentage>

nodeSelector: {}

tolerations: []

affinity: {}

config:
  allowedHosts: <allowedHosts>
  cors:
    origins: <cors.origins>

  ocelot:
    downstreamPathTemplate: <ocelot.downstreamPathTemplate>
    downStreamScheme: <ocelot.downstreamScheme>
    downStreamHost: <ocelot.downStreamHost>
    downStreamPort: <ocelot.downStreamPort>
    upstreamPathTemplate: <ocelot.upstreamPathTemplate>
